# Generic .travis.yml file for running continuous integration on Travis-CI for
# any ROS package.
#
# Available here:
#   - http://felixduvallet.github.io/ros-travis-integration
#   - https://github.com/felixduvallet/ros-travis-integration
#
# This installs ROS on a clean Travis-CI virtual machine, creates a ROS
# workspace, resolves all listed dependencies, and sets environment variables
# (setup.bash). Then, it compiles the entire ROS workspace (ensuring there are
# no compilation errors), and runs all the tests. If any of the compilation/test
# phases fail, the build is marked as a failure.
#
# We handle two types of package dependencies specified in the package manifest:
#   - system dependencies that can be installed using `rosdep`, including other
#     ROS packages and system libraries. These dependencies must be known to
#     `rosdistro` and get installed using apt-get.
#   - package dependencies that must be checked out from source. These are handled by
#     `wstool`, and should be listed in a file named dependencies.rosinstall.
#
# There are two variables you may want to change:
#   - ROS_DISTRO (default is indigo). Note that packages must be available for
#     ubuntu 14.04 trusty.
#   - ROSINSTALL_FILE (default is dependencies.rosinstall inside the repo
#     root). This should list all necessary repositories in wstool format (see
#     the ros wiki). If the file does not exists then nothing happens.
#
# See the README.md for more information.
#
# Author: Felix Duvallet <felixd@gmail.com>

# NOTE: The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

################################################################################

# Use ubuntu trusty (14.04) with sudo privileges.
dist: trusty
sudo: required
language:
  - python
python:
  - 2.7
cache:
  - apt
  - pip

################################################################################

before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $(ROS_CI_DESKTOP) main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
   -sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$(ROS_DISTRO)-catkin python-rosinstall ros-$(ROS_DISTRO)-smach ros-$(ROS_DISTRO)-smach-viewer
# Prepare rosdep to install dependencies.
  - sudo rm -f /etc/ros/rosdep/sources.list.d/20-default.list
  - sudo rosdep init
  - rosdep update

# Install conda
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=/home/travis/miniconda/bin:$PATH
  - conda update --yes conda
  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm

install:
  - conda install --yes python=$TRAVIS_PYTHON_VERSION numpy scipy
  - python setup.py install

  - mkdir -p build/src
  - mkdir -p build/build
  - ln -s env build/build/catkin_pip_env

  - sudo apt-get update -qq
  - sudo apt-get install -y libboost-all-dev libblitz0-dev libopenblas-dev liblapack-dev gfortran
  - pip install --upgrade -r bob-requirements.txt
  - pip install --upgrade bob.extension==2.3.4
  - pip install --upgrade bob.blitz==2.0.11
  - pip install --upgrade bob.core==2.1.6
  - pip install --upgrade bob.sp==2.0.7
  - pip install --upgrade bob.ap==2.1.1
  - pip install --upgrade  -r requirements.txt
  - pip install --upgrade -e git+https://github.com/patengelbert/speaker-recognition.git@b4ec098a928f2197076f7e1063a58ad5b2926cb7#egg=SpeakerRecognition
  - source /opt/ros/indigo/setup.sh
  - catkin_init_workspace build/src
  - cd build
  - catkin_make -C build
# Add the project to the workspace using a symlink.
  - ln -s mediator_bot build/src

  - rm -f build/src/.rosinstall*
# package depdencies: install using rosdep.
  - source /opt/ros/indigo/setup.sh
  - source build/devel/setup.sh
  - wstool init build/src
  - if [ -f mediator_bot/dependencies.rosinstall ] ; then wstool merge -t buiild/src mediator_bot/dependencies.rosinstall ; fi
  - wstool up
  - rosdep install -y --from-paths src --ignore-src --rosdistro indigo --os ubuntu:trusty

  - ln -s env build/build/catkin_pip_env
  - source build/devel/setup.sh
  - catkin_make -C build $( [ -f mediator_bot/catkin.options ] && cat mediator_bot/catkin.options )

script:
  - source /opt/ros/indigo/setup.sh
  - source env/bin/activate
  - source build/devel/setup.sh
  - catkin_make -C build run_tests
  - catkin_test_results build
